-- Minimal Linoria-style GUI Library (Safe for restricted environments)
local Library = {}

function Library:NewWindow(title)
    local self = {}
    self.Tabs = {}
    function self:AddTab(name)
        local tab = {Name = name, Elements = {}}
        function tab:AddLabel(text)
            print("[Label]", text)
        end
        function tab:AddTextbox(opts)
            local box = {Text = opts.Text or "", Callback = function() end}
            function box:SetValue(val)
                box.Text = val
            end
            function box:OnChanged(cb)
                box.Callback = cb
            end
            return box
        end
        function tab:AddSwitch(opts)
            local state = opts.Default or false
            local switch = {Text = opts.Text or "", Value = state, Callback = function() end}
            function switch:SetValue(val)
                switch.Value = val
                switch.Callback(val)
            end
            function switch:OnChanged(cb)
                switch.Callback = cb
            end
            return switch
        end
        function tab:AddSlider(opts)
            local slider = {Value = opts.Default or 0, Callback = function() end}
            function slider:SetValue(val)
                slider.Value = val
                slider.Callback(val)
            end
            function slider:OnChanged(cb)
                slider.Callback = cb
            end
            return slider
        end
        table.insert(self.Tabs, tab)
        return tab
    end
    return self
end

-- Create GUI Window and Tabs
local gui = Library:NewWindow("Executor GUI")
local main = gui:AddTab("Main")

-- Controls
local speedBind = main:AddTextbox({Text = "Speed Keybind"})
local speedSwitch = main:AddSwitch({Text = "Speed Toggle", Default = false})
local speedSlider = main:AddSlider({Text = "Speed", Min = 0, Max = 200, Default = 200})

local flyBind = main:AddTextbox({Text = "Fly Keybind"})
local flySwitch = main:AddSwitch({Text = "Fly Toggle", Default = false})
local flySlider = main:AddSlider({Text = "Fly Speed", Min = 0, Max = 200, Default = 200})
local fallSlider = main:AddSlider({Text = "Fall Speed", Min = 0, Max = 100, Default = 50})
local jumpSlider = main:AddSlider({Text = "Jump Speed", Min = 0, Max = 100, Default = 50})

local noclipBind = main:AddTextbox({Text = "Noclip Keybind"})
local noclipSwitch = main:AddSwitch({Text = "Noclip Toggle", Default = false})

local nofallSwitch = main:AddSwitch({Text = "No Fall Damage", Default = false})

-- Keybinds
local binds = {
    Speed = {KEY = nil, ON = false},
    Fly = {KEY = nil, ON = false},
    Noclip = {KEY = nil, ON = false}
}

-- Slider values
local sliders = {
    Speed = 200,
    FlySpeed = 200,
    FallSpeed = 50,
    JumpSpeed = 50
}

-- UI Bindings
speedBind:OnChanged(function(val) binds.Speed.KEY = val end)
speedSwitch:OnChanged(function(val) binds.Speed.ON = val end)
speedSlider:OnChanged(function(val) sliders.Speed = val end)

flyBind:OnChanged(function(val) binds.Fly.KEY = val end)
flySwitch:OnChanged(function(val) binds.Fly.ON = val end)
flySlider:OnChanged(function(val) sliders.FlySpeed = val end)
fallSlider:OnChanged(function(val) sliders.FallSpeed = val end)
jumpSlider:OnChanged(function(val) sliders.JumpSpeed = val end)

noclipBind:OnChanged(function(val) binds.Noclip.KEY = val end)
noclipSwitch:OnChanged(function(val) binds.Noclip.ON = val end)

nofallSwitch:OnChanged(function(val)
    _G.NoFall = val
end)

-- Feature Scripts
local function setupSpeed()
    pcall(function()
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local UIS = game:GetService("UserInputService")
        local bv = Instance.new("BodyVelocity")
        bv.MaxForce = Vector3.new(1/0, 0, 1/0)
        bv.Velocity = Vector3.new(0, 0, 0)
        local toggled = false
        local function reset()
            pcall(function()
                local char = Players.LocalPlayer.Character
                if char and char:FindFirstChild("Humanoid") then
                    char.Humanoid.JumpPower = 50
                    char.Humanoid.WalkSpeed = 16
                    bv.Parent = nil
                end
            end)
        end
        Players.LocalPlayer.CharacterAdded:Connect(function(char)
            repeat wait() until char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Humanoid")
            if toggled then
                bv.Parent = char.HumanoidRootPart
                char.Humanoid.JumpPower = 0
            end
        end)
        UIS.InputBegan:Connect(function(input, gpe)
            if input.KeyCode.Name == binds.Speed.KEY and not gpe then
                toggled = not toggled
                binds.Speed.ON = toggled
                speedSwitch:SetValue(toggled)
                if toggled then
                    local char = Players.LocalPlayer.Character
                    if char and char:FindFirstChild("HumanoidRootPart") then
                        bv.Parent = char.HumanoidRootPart
                        char.Humanoid.JumpPower = 0
                    end
                else
                    reset()
                end
            end
        end)
        RunService.RenderStepped:Connect(function(dt)
            pcall(function()
                if binds.Speed.ON then
                    local char = Players.LocalPlayer.Character
                    if char and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Humanoid") then
                        local move = Vector3.new()
                        if UIS:IsKeyDown(Enum.KeyCode.W) then move = move + workspace.CurrentCamera.CFrame.LookVector end
                        if UIS:IsKeyDown(Enum.KeyCode.S) then move = move - workspace.CurrentCamera.CFrame.LookVector end
                        if UIS:IsKeyDown(Enum.KeyCode.A) then move = move - workspace.CurrentCamera.CFrame.RightVector end
                        if UIS:IsKeyDown(Enum.KeyCode.D) then move = move + workspace.CurrentCamera.CFrame.RightVector end
                        if move.Magnitude > 0 then move = move.Unit end
                        local max = 49 / dt
                        bv.Velocity = move * math.min(sliders.Speed, max)
                        if char.Humanoid.Health <= 0 then reset(); binds.Speed.ON = false; speedSwitch:SetValue(false) end
                    end
                end
            end)
        end)
        game:BindToClose(function() bv:Destroy() end)
    end)
end

-- Similarly add setupFly(), setupNoclip(), setupNoFall()

setupSpeed()
-- setupFly()
-- setupNoclip()
-- setupNoFall()

return Library
